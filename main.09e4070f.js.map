{"version":3,"sources":["scripts/main.js"],"names":["container","document","querySelector","tBody","rows","querySelectorAll","appendRow","removeRow","appendColumn","removeColumn","minCount","maxCount","addEventListener","e","button","target","closest","classList","contains","forEach","row","newColumn","createElement","appendChild","length","children","disabled","lastElementChild","remove","newRow","cloneNode","append"],"mappings":";AAAA,aAEA,IAAMA,EAAYC,SAASC,cAAc,cACnCC,EAAQF,SAASC,cAAc,SACjCE,EAAOD,EAAME,iBAAiB,MAE5BC,EAAYL,SAASC,cAAc,eACnCK,EAAYN,SAASC,cAAc,eACnCM,EAAeP,SAASC,cAAc,kBACtCO,EAAeR,SAASC,cAAc,kBAEtCQ,EAAW,EACXC,EAAW,GAEjBX,EAAUY,iBAAiB,QAAS,SAASC,GACrCC,IAAAA,EAASD,EAAEE,OAAOC,QAAQ,WAE5B,GAACF,EAAD,CA8BAA,GA1BAA,EAAOG,UAAUC,SAAS,oBAC5Bd,EAAOD,EAAME,iBAAiB,OAEzBc,QAAQ,SAAAC,GACLC,IAAAA,EAAYpB,SAASqB,cAAc,MAEzCF,EAAIG,YAAYF,KAGjBjB,EAAKA,EAAKoB,OAAS,GAAGC,SAASD,QAAUb,EACtCH,EAAakB,UAAW,EACxBjB,EAAaiB,SAAW,IAG1BZ,EAAOG,UAAUC,SAAS,oBAC5Bd,EAAOD,EAAME,iBAAiB,OAEzBc,QAAQ,SAAAC,GACXA,EAAIO,iBAAiBC,WAGtBxB,EAAKA,EAAKoB,OAAS,GAAGC,SAASD,QAAUd,EACtCD,EAAaiB,UAAW,EACxBlB,EAAakB,SAAW,IAG1BZ,EAAOG,UAAUC,SAAS,cAAe,CACrCW,IAAAA,EAASzB,EAAKA,EAAKoB,OAAS,GAAGM,WAAU,GAE/C3B,EAAM4B,OAAOF,IAEbzB,EAAOD,EAAME,iBAAiB,OAExBmB,QAAUb,EACZL,EAAUoB,UAAW,EACrBnB,EAAUmB,SAAW,GAGvBZ,EAAOG,UAAUC,SAAS,gBAC5Bd,EAAKA,EAAKoB,OAAS,GAAGI,UAEtBxB,EAAOD,EAAME,iBAAiB,OAExBmB,QAAUd,EACZH,EAAUmB,UAAW,EACrBpB,EAAUoB,SAAW","file":"main.09e4070f.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst container = document.querySelector('.container');\nconst tBody = document.querySelector('tbody');\nlet rows = tBody.querySelectorAll('tr');\n\nconst appendRow = document.querySelector('.append-row');\nconst removeRow = document.querySelector('.remove-row');\nconst appendColumn = document.querySelector('.append-column');\nconst removeColumn = document.querySelector('.remove-column');\n\nconst minCount = 2;\nconst maxCount = 10;\n\ncontainer.addEventListener('click', function(e) {\n  const button = e.target.closest('.button');\n\n  if (!button) {\n    return;\n  }\n\n  if (button.classList.contains('append-column')) {\n    rows = tBody.querySelectorAll('tr');\n\n    rows.forEach(row => {\n      const newColumn = document.createElement('td');\n\n      row.appendChild(newColumn);\n    });\n\n    (rows[rows.length - 1].children.length >= maxCount)\n      ? appendColumn.disabled = true\n      : removeColumn.disabled = '';\n  }\n\n  if (button.classList.contains('remove-column')) {\n    rows = tBody.querySelectorAll('tr');\n\n    rows.forEach(row => {\n      row.lastElementChild.remove();\n    });\n\n    (rows[rows.length - 1].children.length <= minCount)\n      ? removeColumn.disabled = true\n      : appendColumn.disabled = '';\n  }\n\n  if (button.classList.contains('append-row')) {\n    const newRow = rows[rows.length - 1].cloneNode(true);\n\n    tBody.append(newRow);\n\n    rows = tBody.querySelectorAll('tr');\n\n    (rows.length >= maxCount)\n      ? appendRow.disabled = true\n      : removeRow.disabled = '';\n  }\n\n  if (button.classList.contains('remove-row')) {\n    rows[rows.length - 1].remove();\n\n    rows = tBody.querySelectorAll('tr');\n\n    (rows.length <= minCount)\n      ? removeRow.disabled = true\n      : appendRow.disabled = '';\n  }\n});\n"]}